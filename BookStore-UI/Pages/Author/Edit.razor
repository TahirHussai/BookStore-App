@page "/authors/edit/{Id}"
@attribute [Authorize(Roles ="Administrator")]
@inject IAuthorRepository _repo;
@inject NavigationManager _Navigate;
<h3> Edit Author</h3>
@if (isfailed)
{
    <ErrorMessage Message="Something went wrong wih the operation"></ErrorMessage>
}
@if (Model != null)
{
    <EditForm Model="Model" OnValidSubmit="EditAutor">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label for="email">First Name</label>
            <InputText Id="Firstname" class="form-control" @bind-Value="Model.Firstname" />
            <ValidationMessage For="@(() => Model.Firstname)"></ValidationMessage>
        </div>
        <div class="form-group">
            <label for="email">Last Name</label>
            <InputText Id="Lastname" class="form-control" @bind-Value="Model.Lastname" />
            <ValidationMessage For="@(() => Model.Lastname)"></ValidationMessage>
        </div>
        <div class="form-group">
            <label for="email">Last Name</label>
            <InputText Id="Bio" class="form-control" @bind-Value="Model.Bio" />
        </div>
        <button class="btn btn-primary">
            <span class="oi oi-pencil"></span>
        </button>
        <button @onclick="BackToList" class="btn btn-outline-primary">
            <span class="oi oi-media-skip-backward"></span>
            Back to list
        </button>
    </EditForm>
}
else
{
    <LoadingMessage Message="Loading Author For Edit"></LoadingMessage>
}

@code {
    [Parameter]
    public string Id { get; set; }
    private bool isfailed = false;
    private Author Model = new Author();
    protected override async Task OnInitializedAsync()
    {
        int id = Convert.ToInt32(Id);
        Model = await _repo.Get(Endpoints.AuthorsEndPoint, id);
    }
    private void BackToList()
    {
        _Navigate.NavigateTo("/authors/");
    }
    private async Task EditAutor()
    {
        int id = Convert.ToInt32(Id);
        bool isSuccess = await _repo.Update(Endpoints.AuthorsEndPoint, Model, Model.Id);
        if (isSuccess == true)
        {
            BackToList();
        }
        else
        {
            isfailed = true;
        }
    }

}
