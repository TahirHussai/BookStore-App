@page "/authors/"

@inject IAuthorRepository _authRepo


@if (Model != null)
{
    if (Model.Count() > 0)
    {


        <table class="table table-responsive">
            <thead>
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">First</th>
                    <th scope="col">Last</th>
                    <th scope="col">Action</th>
                </tr>
            </thead>
            <tbody>
                @{
                    int cnt = 1;
                }
                @foreach (var item in Model)
                {
                    <tr>
                        <th scope="row">@cnt </th>
                        <td>@item.Firstname</td>
                        <td>@item.Lastname</td>
                        <td>
                            <a href="/authors/view/@item.Id" class="btn btn-primary"><span class="oi oi-book"></span></a>
                            <AuthorizeView Roles="Administrator">
                                <a href="/authors/edit/@item.Id" class="btn btn-warning"><span class="oi oi-pencil"></span></a>
                                <a href="/authors/delete/@item.Id" class="btn btn-warning"><span class="oi oi-delete"></span></a>

                            </AuthorizeView>
                        </td>
                    </tr>
                    cnt++;
                }


            </tbody>
        </table>
    }
    else
    {
        <ErrorMessage Message="There is no author please clicke on 'Create New Author' button to add new author"></ErrorMessage>
    }
}
else
{
    <AuthorizeView Roles="Administrator">
        <a href="/authors/create/" class="btn btn-primary">
            <span class="oi oi-plus">
                Create New Author
            </span>
        </a>
    </AuthorizeView>

    <LoadingMessage Message="Loading...." />
}






@code {
    private IList<Author> Model;
    protected async override Task OnInitializedAsync()
    {
        Model = await _authRepo.Get(Endpoints.AuthorsEndPoint);
    }
}
