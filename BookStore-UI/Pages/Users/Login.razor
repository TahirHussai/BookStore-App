@page "/login"



@inject IAuthenticationRepository _authRepo
@inject NavigationManager _navMan

<h3 class="card-title">Login</h3>
@if (!response)
{
<ErrorMessage Message="Something went wrong wih the operation"></ErrorMessage>
}

    <EditForm Model="Model" OnValidSubmit="HandleLogin">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label for="email">Email Address</label>
            <InputText Id="email" class="form-control" @bind-Value="Model.EmailAddress" />
            <ValidationMessage For="@(() => Model.EmailAddress)"></ValidationMessage>
        </div>
        <div class="form-group">
            <label for="password">Password</label>
            <InputText Id="password" type="password" class="form-control" @bind-Value="Model.Password" />
            <ValidationMessage For="@(() => Model.Password)"></ValidationMessage>
        </div>
       
        <button type="submit" class="btn btn-primary btn-block">Login</button>

    </EditForm>



@code {
    private LoginModel Model = new LoginModel();

    bool response = true;
    private async Task HandleLogin()
    {
         response = await _authRepo.Login(Model);

        if (response)
        {
            _navMan.NavigateTo("/");
        }
    }
}
