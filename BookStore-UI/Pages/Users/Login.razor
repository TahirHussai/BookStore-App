@page "/login"



@inject IAuthenticationRepository _authRepo
@inject NavigationManager _navMan

<h3 class="card-title">Login</h3>
@if (!response)
{

    <div class="alert alert-dismissible alert-danger">
        <h5>
            <span class="oi oi-circle-x"></span>
            Something went wrong wih the operation
        </h5>
    </div>
}

<EditForm Model="Model" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label for="email">Email Address</label>
        <InputText Id="email" class="form-control" @bind-Value="Model.EmailAddress" />
        <ValidationMessage For="@(() => Model.EmailAddress)"></ValidationMessage>
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <InputText Id="password" type="password" class="form-control" @bind-Value="Model.Password" />
        <ValidationMessage For="@(() => Model.Password)"></ValidationMessage>
    </div>

    <button type="submit" class="btn btn-primary btn-block">Login</button>

</EditForm>



@code {
    private LoginModel Model = new LoginModel();

    bool response = true;
    private async Task HandleLogin()
    {
        response = await _authRepo.Login(Model);

        if (response)
        {
            _navMan.NavigateTo("/");
        }
    }
}
