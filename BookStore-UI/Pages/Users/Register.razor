@page "/register"
@layout LoginLayout
@using BookStore_UI.Models
@using BookStore_UI.Contracts

@inject IAuthenticationRepository _authRepo
@inject NavigationManager _navMan


<div class="card text-center" style="margin-top:150px">
    <div class="card-header">
        Register
    </div>
    <div class="card-body">
        <fieldset>
            @if (isField == true)
            {
                <div class="alert" alert-danger>
                    <div class="alert alert-dismissible alert-danger">
                        <h5>
                            <span class="oi oi-circle-x"></span>
                            Something went wrong wih the operation
                        </h5>
                    </div>

                </div>
            }

            <EditForm Model="Model" OnValidSubmit="HandleRegistration">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="form-group">
                    <label for="email">Email Address</label>
                    <InputText Id="email" class="form-control" @bind-Value="Model.EmailAddress" />
                  
                </div>
                <div class="form-group">
                    <label for="password">Password</label>
                    <InputText Id="password" type="password" class="form-control" @bind-Value="Model.Password" />
                  
                </div>
                <div class="form-group">
                    <label for="confirmpassword">Confirm Password</label>
                    <InputText Id="confirmpassword" type="password" class="form-control" @bind-Value="Model.ConfirmPassword" />
                   
                </div>
                <button type="submit" class="btn btn-primary btn-block">Register</button>
                <a href="/" >Already have account ?</a>
            </EditForm>
            </fieldset>
        </div>
    </div>

            @code {
                private RegistrationModel Model = new RegistrationModel();

                bool isField = false;
                private async Task HandleRegistration()
                {
                    var response = await _authRepo.Register(Model);

                    if (response)
                    {
                        _navMan.NavigateTo("/");
                    }
                    else
                    {
                        _navMan.NavigateTo("/");
                        isField = true;


                    }
                }
            }
